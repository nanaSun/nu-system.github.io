(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{171:function(t,e,s){"use strict";s.r(e);var r=s(0),n=Object(r.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("No UI 组件库系统 nu-system，是一个 推崇 UI 和 Logic 完全分离的组件系统。")]),t._v(" "),s("p",[t._v("主要由 UI Just + Logic only 两部分组成，UI 和 Logic 由对应接口关联，也可以完全独立。")]),t._v(" "),s("p",[t._v("我们更希望 NU-system 是一个开放的平台，只要你的组件符合我们的规范，就可以和我们一起将它丰富起来。")]),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("UI Just 分为 UI Core 和 Skin library。")]),t._v(" "),t._m(2),t._v(" "),s("p",[t._v("目前 UI Just 部分以及文档都放在了 "),s("a",{attrs:{href:"https://github.com/yued-fe/nu-system",target:"_blank",rel:"noopener noreferrer"}},[t._v("nu-system"),s("OutboundLink")],1),t._v(" 仓库中。")]),t._v(" "),s("p",[t._v("NU-system 本身并没有对UI语言做限制，所以可以使用任意 UI 语言创建 UI Just 部分。")]),t._v(" "),s("p",[t._v("只是目前 CSS 比较容易实现这套理念，所以 ui-system 目前提供 css 的方式。")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),s("p",[t._v("因为逻辑和 UI 的分离，意味着可以使用任意的 JS 框架去实现 UI Core 的规范。")]),t._v(" "),s("p",[t._v("同理也可以基于 Logic Only 的规范创建 UI Core。")]),t._v(" "),s("p",[t._v("NU-system 本身并没有对逻辑语言做限制，所以可以使用任意 JS 语言创建 Logic Only 部分。")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://yued-fe.github.io/nu-vue/",target:"_blank",rel:"noopener noreferrer"}},[t._v("nu-vue"),s("OutboundLink")],1),t._v(" 是 Logic Only 的 Vue 实现版本;")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://yued-fe.github.io/nu-react/",target:"_blank",rel:"noopener noreferrer"}},[t._v("nu-react"),s("OutboundLink")],1),t._v(" 是 Logic Only 的 React 实现版本;")]),t._v(" "),s("li",[t._v("nu-jquery 规划之中;")]),t._v(" "),s("li",[t._v("nu-js 规划之中;")])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"nu-system"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nu-system","aria-hidden":"true"}},[this._v("#")]),this._v(" NU-system")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"ui-just"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ui-just","aria-hidden":"true"}},[this._v("#")]),this._v(" UI Just")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("strong",[this._v("UI Core:")]),this._v(" UI 核心样式，是对通用 UI 的进一步抽象，以便于其他人在定义 Skin 的时候可以写更少样式代码，更像是一个 UI 接口规范。")]),this._v(" "),e("li",[e("strong",[this._v("Skin library:")]),this._v(" skin 是基于 UI Core 提供的样式接口进行开发的可替换的皮肤。以至于符合相同规范的任意 skin 之间可以互换，甚至是作为一种资源被其它人使用。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("nu-css-in-js 规划之中；")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"logic-only"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#logic-only","aria-hidden":"true"}},[this._v("#")]),this._v(" Logic Only")])}],!1,null,null,null);e.default=n.exports}}]);